package com.aim.questionnaire.dao;

import com.aim.questionnaire.entity.RootPermissionEntity;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.Map;

@Repository
public interface RootPermissionEntityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table root_permission_info
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table root_permission_info
     *
     * @mbg.generated
     */
    int insert(RootPermissionEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table root_permission_info
     *
     * @mbg.generated
     */
    int insertSelective(RootPermissionEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table root_permission_info
     *
     * @mbg.generated
     */
    RootPermissionEntity selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table root_permission_info
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(RootPermissionEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table root_permission_info
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(RootPermissionEntity record);

    /**
     * 获取角色权限
     * @param roleId
     * @return
     */
    List<String> findPermissionByRoleId(String roleId);

    /**
     * 获取admin角色权限
     * @return
     */
    List<Map<String,Object>> findPermissionByAdminId(@Param("permission") String permission);

    /**
     * 查找全部的權限
     * @return
     */
    List<RootPermissionEntity> selectAll();

    /**
     * 角色添加权限
     * @param map
     * @return
     */
    int addRootPermission(Map<String, Object> map);

    /**
     * 清空数据库里角色的权限信息
     * @param role
     * @return
     */
    int deletePermissionByRoot(String role);

    /**
     * 查找默认的权限
     * @return
     */
    List<Map<String,Object>> findPermissionByAdminIdDefault();

    /**
     * 修改权限路径
     * @param map
     * @return
     */
    int modifyPathIdByPermission(Map<String, Object> map);

    /**
     * 删除模块对应的权限
     * @param map
     * @return
     */
    int deletePermissionInfo(Map<String, Object> map);

    /**
     * 为角色添加项目和问卷管理
     * @param map
     */
    int addRootPermissionByAdmin(Map<String, Object> map);

    /**
     * 修改权限对应的角色名
     * @param map
     * @return
     */
    int modifyPermissionByRoleId(Map<String, Object> map);
}