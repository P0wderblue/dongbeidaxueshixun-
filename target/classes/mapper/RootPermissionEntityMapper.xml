<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aim.questionnaire.dao.RootPermissionEntityMapper">
  <resultMap id="BaseResultMap" type="com.aim.questionnaire.entity.RootPermissionEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="path_id" jdbcType="VARCHAR" property="pathId" />
    <result column="permission" jdbcType="VARCHAR" property="permission" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="created_by" jdbcType="CHAR" property="createdBy" />
    <result column="creation_date" jdbcType="TIMESTAMP" property="creationDate" />
    <result column="last_updated_by" jdbcType="CHAR" property="lastUpdatedBy" />
    <result column="last_update_date" jdbcType="TIMESTAMP" property="lastUpdateDate" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, role_id, role, path_id, permission, status, created_by, creation_date, last_updated_by, 
    last_update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from root_permission_info
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from root_permission_info
    where id = #{id,jdbcType=VARCHAR}
  </delete>

  <!--清空数据库里角色的权限信息-->
  <delete id="deletePermissionByRoot" parameterType="java.lang.String">
    delete from root_permission_info
    where role = #{role,jdbcType=VARCHAR}
    and permission != "0"
  </delete>

  <!--删除模块对应的权限-->
  <delete id="deletePermissionInfo" parameterType="map">
    delete from root_permission_info
    where path_id = #{pathId,jdbcType=VARCHAR}
    and permission = #{status,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.aim.questionnaire.entity.RootPermissionEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into root_permission_info (id, role_id, role, 
      path_id, permission, status, 
      created_by, creation_date, last_updated_by, 
      last_update_date)
    values (#{id,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR}, 
      #{pathId,jdbcType=VARCHAR}, #{permission,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{createdBy,jdbcType=CHAR}, #{creationDate,jdbcType=TIMESTAMP}, #{lastUpdatedBy,jdbcType=CHAR}, 
      #{lastUpdateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.aim.questionnaire.entity.RootPermissionEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into root_permission_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="pathId != null">
        path_id,
      </if>
      <if test="permission != null">
        permission,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="creationDate != null">
        creation_date,
      </if>
      <if test="lastUpdatedBy != null">
        last_updated_by,
      </if>
      <if test="lastUpdateDate != null">
        last_update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="pathId != null">
        #{pathId,jdbcType=VARCHAR},
      </if>
      <if test="permission != null">
        #{permission,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=CHAR},
      </if>
      <if test="creationDate != null">
        #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatedBy != null">
        #{lastUpdatedBy,jdbcType=CHAR},
      </if>
      <if test="lastUpdateDate != null">
        #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.aim.questionnaire.entity.RootPermissionEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update root_permission_info
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="pathId != null">
        path_id = #{pathId,jdbcType=VARCHAR},
      </if>
      <if test="permission != null">
        permission = #{permission,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=CHAR},
      </if>
      <if test="creationDate != null">
        creation_date = #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatedBy != null">
        last_updated_by = #{lastUpdatedBy,jdbcType=CHAR},
      </if>
      <if test="lastUpdateDate != null">
        last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aim.questionnaire.entity.RootPermissionEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update root_permission_info
    set role_id = #{roleId,jdbcType=VARCHAR},
      role = #{role,jdbcType=VARCHAR},
      path_id = #{pathId,jdbcType=VARCHAR},
      permission = #{permission,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=CHAR},
      creation_date = #{creationDate,jdbcType=TIMESTAMP},
      last_updated_by = #{lastUpdatedBy,jdbcType=CHAR},
      last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <!--修改权限路径-->
  <update id="modifyPathIdByPermission" parameterType="map">
    update root_permission_info
    set path_id = #{path,jdbcType=VARCHAR}
    where path_id = #{pathId,jdbcType=VARCHAR}
    and permission = #{status,jdbcType=VARCHAR}
  </update>

  <!--修改权限对应的角色名-->
  <update id="modifyPermissionByRoleId">
    update root_permission_info
    set
      role = #{role,jdbcType=VARCHAR},
      created_by = concat("authc,roles[", #{roleCode, jdbcType=VARCHAR} ,"],kickout")
    where role_id = #{id,jdbcType=VARCHAR}
  </update>

  <!--获取角色权限-->
  <select id="findPermissionByRoleId" parameterType="java.lang.String" resultType="java.lang.String">
    select path_id as pathId
    FROM root_permission_info
    WHERE role_id = #{roleId,jdbcType=VARCHAR}
    AND status = "1"
  </select>

  <!--获取admin角色权限-->
  <select id="findPermissionByAdminId" parameterType="java.lang.String" resultType="map">
    select path_id as pathId, permission
    FROM root_permission_info
    WHERE role_id = "1"
    AND status = "1"
    and permission = #{permission,jdbcType=VARCHAR}
  </select>

  <!--查找全部的權限-->
  <select id="selectAll" resultType="com.aim.questionnaire.entity.RootPermissionEntity">
    select
    <include refid="Base_Column_List" />
    FROM root_permission_info
  </select>

  <!--查找默认的权限-->
  <select id="findPermissionByAdminIdDefault" resultType="java.util.Map">
    select path_id as pathId, permission
    FROM root_permission_info
    WHERE permission = "0"
    AND role_id = "1"
    AND status = "1"
  </select>

  <!--角色添加权限-->
  <insert id="addRootPermission" parameterType="map">
    insert into root_permission_info (id, role_id, role,
      path_id, permission, status,
      created_by, creation_date, last_updated_by,
      last_update_date)
    values (#{id,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR},
      #{pathId,jdbcType=VARCHAR}, #{permission,jdbcType=VARCHAR}, "1",
      #{createdBy,jdbcType=CHAR}, #{creationDate,jdbcType=TIMESTAMP}, #{lastUpdatedBy,jdbcType=CHAR},
      #{lastUpdateDate,jdbcType=TIMESTAMP})
  </insert>

  <!--为角色添加项目和问卷管理-->
  <insert id="addRootPermissionByAdmin" parameterType="map">
    insert into root_permission_info (id, role_id, role,
      path_id, permission, status,
      created_by, creation_date, last_updated_by,
      last_update_date)
    values
    <foreach collection="permList" item="item" index="index" separator=",">
      (
      concat("500",REPLACE(UUID(),"-",""),""),
      #{roleId, jdbcType=VARCHAR},
      #{role, jdbcType=VARCHAR},
      #{item.pathId, jdbcType=VARCHAR},
      #{item.permission, jdbcType=VARCHAR},
      "1",
      concat("authc,roles[", #{roleCode, jdbcType=VARCHAR} ,"],kickout"),
      #{creationDate, jdbcType=TIMESTAMP},
      #{lastUpdatedBy, jdbcType=VARCHAR},
      #{lastUpdateDate, jdbcType=TIMESTAMP}
      )
    </foreach>

  </insert>
</mapper>